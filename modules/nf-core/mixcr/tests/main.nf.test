// TODO nf-core: Once you have added the required tests, please run the following command to build this file:
// nf-core modules test mixcr
nextflow_process {

    name "Test Process MIXCR"
    script "../main.nf"
    process "MIXCR"

    tag "modules"
    tag "modules_nfcore"
    tag "mixcr"

    // TODO nf-core: Change the test name preferably indicating the test-data and file-format used
    test("genomics - homo_sapiens - 10xgenomics - cellranger - fastq") {
        when {
            process {
                """
                input[0] = [
                    [ id:'test', single_end:false ], // meta map
                    [ file(params.modules_testdata_base_path + 'genomics/homo_sapiens/10xgenomics/cellranger/5k_cmvpos_tcells/fastqs/vdj/subsampled_5k_human_antiCMV_T_TBNK_connect_VDJ_S1_L001_R1_001.fastq.gz', checkIfExists: true), file(params.modules_testdata_base_path + '/genomics/homo_sapiens/10xgenomics/cellranger/5k_cmvpos_tcells/fastqs/vdj/subsampled_5k_human_antiCMV_T_TBNK_connect_VDJ_S1_L001_R2_001.fastq.gz', checkIfExists: true) ]
                ]
                input[1] = "10x-vdj-tcr"
                input[2] = "hsa"
                input[3] = "E-BSBNBYVCBBIAGVCMOQMDQUATLQZUDKXBIPAARSDTDWUVMVRX"
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                // { assert snapshot(process.out).match() }
                //TODO nf-core: Add all required assertions to verify the test output.
                // See https://nf-co.re/docs/contributing/tutorials/nf-test_assertions for more information and examples.
            )
        }

    }

    // TODO nf-core: Change the test name preferably indicating the test-data and file-format used but keep the " - stub" suffix.
    test("10xgenomics vdj - stub") {

        options "-stub"

        when {
            process {
                """
                input[0] = [
                    [ id:'test', single_end:false ], // meta map
                    [ file(params.modules_testdata_base_path + 'genomics/homo_sapiens/10xgenomics/cellranger/5k_cmvpos_tcells/fastqs/vdj/subsampled_5k_human_antiCMV_T_TBNK_connect_VDJ_S1_L001_R1_001.fastq.gz', checkIfExists: true), file(params.modules_testdata_base_path + '/genomics/homo_sapiens/10xgenomics/cellranger/5k_cmvpos_tcells/fastqs/vdj/subsampled_5k_human_antiCMV_T_TBNK_connect_VDJ_S1_L001_R2_001.fastq.gz', checkIfExists: true) ]
                ]
                input[1] = "10x-vdj-tcr"
                input[2] = "hsa"
                input[3] = "E-BSBNBYVCBBIAGVCMOQMDQUATLQZUDKXBIPAARSDTDWUVMVRX"
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                // { assert snapshot(process.out).match() }
                //TODO nf-core: Add all required assertions to verify the test output.
            )
        }

    }

}
